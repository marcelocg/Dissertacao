funcao(64)
funcao(48)
funcao(1)
funcao(4)
funcao(8)
funcao(16)
funcao(24)
summary(mod)
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
C <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
X;Y
X <- P -1
X;Y
Y <- (P / C) - 1
X;Y
Thr <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Thr <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
C <- Thr / Thr[1]
C
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Measured <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
C <- Measured / Measured[1]
X <- P -1
Y <- (P / C) - 1
X;Y
plot(X,Y)
mod <- lm(Y ~ poly(X, 2, raw=TRUE))
summary(mod)
X;Y
plot(X,Y)
mod <- lm(Y ~ poly(X, 2, raw=TRUE))
summary(mod)
-9.215e-05
funcao <- function(x){-9.215e-05 * x^2 + 5.749e-02 * x - -1.098e-01}
funcao(1)
mi <- 5.749e-02 -9.215e-05
k
k <- -9.215e-05
mi <- 5.749e-02 -9.215e-05
k
funcao <- function(p, mi, k){p / (1 + mi * (p - 1) + k*p*(p-1))}
funcao(1, 5.749e-02 -9.215e-05, -9.215e-05)
funcao(4, 5.749e-02 -9.215e-05, -9.215e-05)
funcao(64, 5.749e-02 -9.215e-05, -9.215e-05)
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Measured <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
C <- Measured / Measured[1]
X <- P -1
Y <- (P / C) - 1
X;Y
plot(X,Y)
mod <- lm(Y ~ poly(X, 2, raw=TRUE))
summary(mod)
X;Y
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Measured <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
C <- Measured / Measured[1]
fix(P)
fix(C)
X <- P -1
Y <- (P / C) - 1
fix(X)
fix(Y)
mod <- lm(Y ~ X^2 + X)
mod
summary(mod)
mod <- lm(Y ~ X^2 + X + 0)
summary(mod)
mod <- lm(Y ~ X^2 + X + 1)
summary(mod)
mod <- lm(Y ~ X^2 + X - 1)
summary(mod)
mod <- lm(Y ~ I(X^2) + X - 1)
summary(mod)
packages.install("usl")
install.packages("usl")
library(usl)
dados.processor <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
dados.performance <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
modelo <- usl(performance ~ processor, data = dados)
dados
modelo <- usl(dados.performance ~ dados.processor)
cbind(c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64),c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310) )
cbind(P,  Measured)
dados <- cbind(P,  Measured)
dados
modelo <- usl(Measured ~ P, data = dados)
str(modelo)
str(dados)
dados <- data.frame(P,  Measured)
str(dados)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
efficiency(modelo)
coef(modelo)
plot(P ~ Measured, pch=16)
plot(Measured ~P, pch=16)
plot(model, add = TRUE)
plot(modelo, add = TRUE)
scale.factor
modelo$x
modelo$y
modelo.y
mod <- lm(Y ~ I(X^2) + X - 1)
summary(mod)
mod <- lm(Y ~ I(X^2) + X + 0)
summary(mod)
mod[1]
coef(mod)[1]
coef(mod)[1]
coef(mod)[2]
P <- c(1, 4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Measured <- c(20, 78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
C <- Measured / Measured[1]
X <- P -1
Y <- (P / C) - 1
mod <- lm(Y ~ I(X^2) + X + 0)
summary(mod)
coef(mod)[1]
coef(mod)[2]
plot(Measured ~P, pch=16)
plot(mod, add = TRUE)
plot(Measured ~P, pch=16)
plot(Measured ~P, pch=16)
plot(Measured ~P, pch=16)
plot(mod)
plot(Measured ~P, pch=16)
plot(Measured ~P, pch=16)
coef(mod)[1]
coef(mod)[2]
coef(mod)[1]
coef(mod)[2]
summary(mod)
coef(mod)[1]
coef(mod)[2]
summary(mod)
coef(mod)[1]
coef(mod)[2]
funcao <- function(model, p) { p / ((1 + (coef(model)[1] - coef(model)[2])  * (p - 1)) + (coef(model)[2] * p * (p-1)) )}
funcao(1)
funcao(model, 1)
funcao(mod, 1)
funcao(mod, 1)
coef(mod)[1]
coef(mod)[2]
coef(mod)[2][1]
mod[2]
mod$2
coef(mod)[1]
coef(mod)[2]
0.05002865 - 4.708218e-06
P <- c(1, 4, 8, 28)
Measured <- c(20, 78, 130, 230)
summary(modelo)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
library(usl)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(0, 1, 18, 36, 72, 108, 144, 216)
Measured <- c(0, 64.9, 995.9, 1652.4, 1853.2, 1828.9, 1775, 1702.2)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
P <- c(1, 18, 36, 72, 108, 144, 216)
Measured <- c(64.9, 995.9, 1652.4, 1853.2, 1828.9, 1775, 1702.2)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(1, 2, 4, 7, 10, 20)
Measured <- c(24, 48, 85, 100, 99, 94)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
Measured <- c(24, 48, 85, 100, 99, 94, 125)
plot(Measured ~P, pch=16)
P <- c(1, 2, 4, 7, 10, 20, 0)
Measured <- c(24, 48, 85, 100, 99, 94, 125)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
p <- (100,1000,200,300,400,500,600,700,800,900)
p <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(305,28908.1,1626.7,4769,8737.6,12049.4,15845.6,18838,22397.4,25831.5)
dados <- data.frame(P,  Measured)
Measured <- c(305,28908.1,1626.7,4769,8737.6,12049.4,15845.6,18838,22397.4,25831.5)
dados <- data.frame(P,  Measured)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(305,28908.1,1626.7,4769,8737.6,12049.4,15845.6,18838,22397.4,25831.5)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
modelo <- usl(Measured ~ P, data = dados, method = "nls")
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(22398,182907.7,51516.2,80700.2,107045,137106.6,161485.1,177864.3,188102,186460.4)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(5458,110808.7,14303,23463.8,34169.6,43098.4,54197,65347.7,80632.2,103592.4)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
plot(modelo, add = TRUE)
summary(modelo)
plot(modelo)
plot(Measured ~P, pch=16)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(47815,75900,57320,65605,74185,74085,75525,75430,76170,75310)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(1, 2, 4, 7, 10, 20)
Measured <- c(24, 48, 85, 100, 99, 94)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
#3-tier web application
P <- c(1, 2, 4, 7, 10, 20)
Measured <- c(24, 48, 85, 100, 99, 94)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados)
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(2, 4, 7, 10, 20)
Measured <- c(48, 85, 100, 99, 94)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(4, 8, 12, 16, 20, 24, 28, 32, 48, 64)
Measured <- c(78, 130, 170, 190, 200, 210, 230, 260, 280, 310)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
plot(Measured ~P, pch=16)
plot(modelo, add = TRUE)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(47815,75900,57320,65605,74185,74085,75525,75430,76170,75310)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
P <- c(100,1000,200,300,400,500,600,700,800,900)
Measured <- c(5458,110808.7,14303,23463.8,34169.6,43098.4,54197,65347.7,80632.2,103592.4)
dados <- data.frame(P,  Measured)
modelo <- usl(Measured ~ P, data = dados, method = "nlxb")
summary(modelo)
setwd("C:/Users/Matheus/Dropbox/Dissertacao Marcelo Goncalves/capacitor_dog/R")
require(ggplot2)
capacity = read.csv("1414438523-capacity.csv", header = TRUE, stringsAsFactors = FALSE)
capacity$sla <- factor(capacity$sla, order=TRUE)
capacity$heuristic <- factor(capacity$heuristic, order=TRUE)
cost = read.csv("1414438523-cost.csv", header = TRUE, stringsAsFactors = FALSE)
cost$sla <- factor(cost$sla, order=TRUE)
cost$heuristic <- factor(cost$heuristic, order=TRUE)
pdf("Execution_x_Prediction.pdf", width = 9.5, height = 6)
graph_base <- capacity
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP" | heuristic != "RR10" | heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
graph_base <- cost
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP" | heuristic != "RR10" | heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
dev.off()
View(graph_base)
capacity = read.csv("1414438523-capacity.csv", header = TRUE, stringsAsFactors = FALSE)
capacity$sla <- factor(capacity$sla, order=TRUE)
capacity$heuristic <- factor(capacity$heuristic, order=TRUE)
cost = read.csv("1414438523-cost.csv", header = TRUE, stringsAsFactors = FALSE)
cost$sla <- factor(cost$sla, order=TRUE)
cost$heuristic <- factor(cost$heuristic, order=TRUE)
pdf("Execution_x_Prediction.pdf", width = 9.5, height = 6)
graph_base <- capacity
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP" | heuristic != "RR10" | heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
graph_base <- cost
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP")
graph_base <- subset(graph_base, heuristic != "RR10")
graph_base <- subset(graph_base, heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
dev.off()
graph_base <- cost
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP")
graph_base <- subset(graph_base, heuristic != "RR10")
graph_base <- subset(graph_base, heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
require(ggplot2)
capacity = read.csv("1414438523-capacity.csv", header = TRUE, stringsAsFactors = FALSE)
capacity$sla <- factor(capacity$sla, order=TRUE)
capacity$heuristic <- factor(capacity$heuristic, order=TRUE)
cost = read.csv("1414438523-cost.csv", header = TRUE, stringsAsFactors = FALSE)
cost$sla <- factor(cost$sla, order=TRUE)
cost$heuristic <- factor(cost$heuristic, order=TRUE)
pdf("Execution_x_Prediction.pdf", width = 9.5, height = 6)
graph_base <- capacity
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP")
graph_base <- subset(graph_base, heuristic != "RR10")
graph_base <- subset(graph_base, heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Capacity Graph")
graph_base <- cost
graph_base <- subset(graph_base, heuristic != "CR")
graph_base <- subset(graph_base, heuristic != "OR")
graph_base <- subset(graph_base, heuristic != "PR")
graph_base <- subset(graph_base, heuristic != "RR")
graph_base <- subset(graph_base, heuristic != "RC")
graph_base <- subset(graph_base, heuristic != "RO")
graph_base <- subset(graph_base, heuristic != "RP")
graph_base <- subset(graph_base, heuristic != "RR10")
graph_base <- subset(graph_base, heuristic != "RR50")
graph_base <- subset(graph_base, sla <=50000)
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = exec, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = exec), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("Execution") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
ggplot(graph_base, aes(x = sla)) +
geom_point(size=3, aes(colour=heuristic, y = cost, shape=heuristic), fill="white") +
scale_shape_manual(values=c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16))+
geom_line(aes(group=heuristic, colour=heuristic, y = cost), linetype="solid", size=1) +
theme_bw(base_size = 12, base_family = "") +
scale_x_discrete("Sla") +
scale_y_continuous("U$/Hour") +
theme(
title    = element_text(face="bold", size = 14),
axis.title  = element_text(face="bold", size = 12)
)+ ggtitle("Cost Graph")
dev.off()
